<template>
  <el-container>
    <el-aside :width="isCollapse == false ? '12rem' : '4rem'" class="aside">
      <div class="logo">
        <img src="@/assets/logo.png" alt="" :style="{ display: !isCollapse ? '' : 'none' }" />
        <h4 class="title" :style="{ display: isCollapse == false ? '' : 'none' }">后勤</h4>
      </div>

      <el-menu
        unique-opened
        default-active="this.$route.path"
        :collapse="isCollapse"
        :collapse-transition="false"
        :router="true"
      >
        <template v-for="item in router" :key="item.path">
          <el-menu-item :index="item.path" v-if="!item.children">
            <el-icon> <component :is="item.meta.icon"></component> </el-icon>
            <template #title>
              <span>{{ item.meta?.info }}</span>
            </template>
          </el-menu-item>
          <el-sub-menu :index="item.path" v-if="item.children">
            <template #title>
              <el-icon :style="{ color: item.meta.color }"> <component :is="item.meta.icon"></component> </el-icon>
              <span>{{ item.meta?.info }}</span>
            </template>
            <el-menu-item v-for="child in item.children" :key="child.path" :index="child.path">
              <template #title>
                <span>{{ child.meta.info }}</span>
              </template>
            </el-menu-item>
          </el-sub-menu>
        </template>
      </el-menu>
    </el-aside>
    <el-container>
      <el-header>
        <div class="siderOpen">
          <el-icon :size="20" v-if="isCollapse === false" @click="isCollapse = !isCollapse"><Expand /></el-icon>
          <el-icon :size="20" v-if="isCollapse === true" @click="triggerSidebarOpened"><Fold /></el-icon>
        </div>
        <Header></Header>
      </el-header>
      <!-- <Tagview></Tagview> -->
      <el-main>
        <div class="layout-main">
          <router-view v-slot="{ Component }">
            <component :is="Component" v-if="!$route.meta.keepAlive" :key="$route.name" />

            <keep-alive>
              <component :is="Component" :key="$route.name" v-if="$route.meta.keepAlive" />
            </keep-alive>
          </router-view>
        </div>
      </el-main>
    </el-container>
  </el-container>
</template>

<script>
import Router from "@/router/index";
export default {
  data() {
    return {
      isCollapse: false,
      router: [],
    };
  },
  created() {
    this.router = Router.options.routes[7].children;
    console.log(Router.options);
    this.router = this.recursiveFilter(this.router);
  },
  methods: {
    triggerSidebarOpened() {
      this.isCollapse = !this.isCollapse;
    },
    recursiveFilter(routes) {
      return routes.filter((route) => {
        let hasAccess = route.meta?.roles?.includes(this.$store.state.role) && route.meta?.requireAuth;
        // 如果当前路由有权限且包含子路由
        if (hasAccess && route.children) {
          // 对子路由进行同样的过滤
          route.children = this.recursiveFilter(route.children);
        }

        return hasAccess;
      });
    },
  },
};
</script>

<style lang="scss" scoped>
.layout-main {
  background-color: #fff;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
}
</style>
