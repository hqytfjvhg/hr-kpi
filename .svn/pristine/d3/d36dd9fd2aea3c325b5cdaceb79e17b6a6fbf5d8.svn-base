<template>
  <div class="userlist">
    <div class="userlist-title">用户列表</div>
    <el-form>
      <el-form-item label="部门">
        <el-select clearable placeholder="请选择部门" v-model.number="deptId">
          <el-option v-for="item in deptOptions" :key="item.deptId" :label="item.deptName" :value="item.deptId" />
        </el-select>
      </el-form-item>
      <el-form-item label="角色">
        <el-select clearable placeholder="请输入角色" v-model="role">
          <el-option v-for="item in roleOptions" :key="item.roleId" :label="item.roleName" :value="item.roleId" />
        </el-select>
      </el-form-item>
      <el-form-item label="姓名">
        <el-input clearable placeholder="请输入姓名" v-model="name"></el-input>
      </el-form-item>
      <el-button @click="getUserList">查询</el-button>
    </el-form>
    <el-table :data="userListData" height="40rem" style="width: 100%; text-align: center" stripe type="index">
      <el-table-column type="index" label="序号" width="100" />
      <el-table-column prop="userId" label="ID" />
      <el-table-column prop="name" label="姓名" />
      <el-table-column prop="roleName" label="角色" />
      <el-table-column prop="deptName" label="部门" />
      <el-table-column prop="phone" label="手机号码" />
      <el-table-column fixed="right" label="操作">
        <template #default="{ row }">
          <el-button type="danger" size="small" @click="deleteRow(row)">删除</el-button>
          <el-button type="primary" size="small" @click="changeRow(row)">重置密码</el-button>
        </template>
      </el-table-column>
    </el-table>
    <div class="demo-pagination-block">
      <el-pagination
        v-model:current-page="currentPage"
        v-model:page-size="pageSize"
        :page-sizes="[10, 20, 30, 40]"
        :disabled="disabled"
        background
        layout="total,sizes, prev, pager, next"
        :total="total"
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
      />
    </div>
    <Dialog
      v-if="dialogShow"
      v-model:dialogShow="dialogShow"
      :rowInfo="rowInfo"
      :title="title"
      :arrayNum="userListData.length"
      @addRow="addRow"
      @editRow="editRow"
    />
  </div>
</template>

<script>
import { onMounted, reactive, toRefs } from "vue";
import { ElMessageBox, ElMessage } from "element-plus";
import Dialog from "./DialogView.vue";
import { userList, resetpsw, deleteUser, roleList } from "@/api/userlist/index";
import { deptList } from "@/api/register/index";

export default {
  components: { Dialog },
  setup() {
    const data = reactive({
      name: null,
      role: null,
      deptId: null,
      deptOptions: [],
      roleOptions: [],
      dialogShow: false, // 新增/编辑弹框
      detailShow: false, // 详情弹窗
      rowInfo: {}, // 新增/编辑的数据
      title: "", // 是新建还是修改
      //列表渲染数据的table
      userListData: [
        {
          userID: "",
          name: "",
          deptName: "",
          phone: "",
        },
      ],
      currentPage: 1,
      pageSize: 10,
      total: 100,
    });
    onMounted(() => {
      method.getUserList();
      deptList()
        .then((res) => {
          data.deptOptions = res.data.data;
        })
        .catch(() => {});
      roleList().then((res) => {
        data.roleOptions = res.data.data;
      });
    });
    const method = reactive({
      getUserList() {
        const userdata = {
          length: data.pageSize,
          page: data.currentPage,
          name: data.name,
          role: data.role,
          deptId: data.deptId,
        };
        userList(userdata)
          .then((res) => {
            data.userListData = res.data.data.list;
            data.total = res.data.data.totalCount;
            console.log(res.data.data.list);
          })
          .catch(() => {});
      },
      handleSizeChange(newSize) {
        data.pageSize = newSize;
        method.getUserList();
      },
      handleCurrentChange(newPage) {
        data.currentPage = newPage;
        method.getUserList();
      },
      addUser() {
        data.title = "新增";
        data.rowInfo = {};
        data.dialogShow = true;
      },
      changeRow(val) {
        data.title = "修改";
        data.dialogShow = true;
        data.rowInfo = val;
      },
      deleteRow(val) {
        ElMessageBox.confirm("确定删除此信息吗?", "提示", {
          confirmButtonText: "确认",
          cancelButtonText: "取消",
          type: "warning",
        })
          .then(() => {
            const deleteData = { userIds: val.userId };
            deleteUser(deleteData)
              .then((res) => {
                method.handleSure(val);
                if (res.data.code == 0) return ElMessage.success("删除成功");
                ElMessage.error("删除失败");
              })
              .catch(() => {});
          })
          .catch(() => {
            ElMessage.info("取消删除");
            // catch error
          });
      },
      handleSure(val) {
        this.dialogVisible = false;
        const index = data.userListData.findIndex((item) => item.userID === val.userID);
        data.userListData.splice(index, 1);
        method.getUserList();
      },
      // 添加行
      addRow(val) {
        data.userListData.push(val);
      },
      // 编辑行
      editRow(val) {
        console.log(val);
        let index = data.userListData.findIndex((item) => item.id === val.id);
        data.userListData.splice(index, 1, val);
        const resetData = {
          newPassword: val.newPassword,
          userId: val.userId,
        };
        resetpsw(resetData);
      },
    });
    return { ...toRefs(data), ...method };
  },
};
</script>

<style lang="scss">
.userlist {
  padding: 1rem;
  background-color: #fff;

  .userlist-title {
    display: flex;
    align-items: center;
    justify-content: space-between;
    text-align: left;
    padding: 1rem;
  }
  .el-table__header-wrapper th {
    text-align: center;
  }
  .el-table__cell {
    text-align: center;
  }
}
.demo-pagination-block {
  padding: 1rem;
}
.el-form {
  display: flex;
  justify-content: space-around;
}
</style>
